/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint. 
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
{
    "color-highlight.markerType": "outline",
    "editor.fontFamily": "'Firicico', 'Fira Code', Consolas, 'Courier New', monospace",
    "editor.fontLigatures": true,
    "editor.formatOnSave": true,
    "editor.renderWhitespace": "all",
    "editor.tokenColorCustomizations": {
        "textMateRules": [
            {
                "scope": [
                    "keyword",
                    "storage.modifier",
                    "storage.type.class.js",
                    "storage.type.function.js",
                    "storage.type.js",
                    "keyword.control.import",
                    "keyword.control.from",
                    "keyword.control.flow",
                    "keyword.control.conditional",
                    "keyword.control.loop",
                    "keyword.operator.new"
                ],
                "settings": {
                    "fontStyle": "italic"
                }
            },
            {
                "scope": [
                    "storage.type.function.arrow.ts",
                    "storage.type.function.arrow.js",
                    "invalid",
                    "comment",
                    "variable.parameter.url.css",
                    "variable.parameter",
                    "support.type",
                    "storage.type.function.arrow.tsx",
                    "keyword.operator",
                    "constant.numeric.css",
                    "keyword.other.unit.px.css",
                    "constant.numeric.decimal.js",
                    "constant.numeric.json",
                    "entity.name.type.class.js",
                    "keyword.control.anchor.regexp",
                    "punctuation.definition.string.end.ts"
                ],
                "settings": {
                    "fontStyle": ""
                }
            }
        ]
    },
    "emmet.includeLanguages": {
        "javascript": "javascriptreact",
        "django-html": "html"
    },
    "files.associations": {
        "requirements_dev.txt": "pip-requirements"
    },
    "files.autoSave": "onFocusChange",
    "files.eol": "\n",
    "files.exclude": {
        "**/.ipynb_checkpoints": true,
        "**/.git": true,
        "**/.svn": true,
        "**/.hg": true,
        "**/CVS": true,
        "**/.DS_Store": true,
        "package-lock.json": true,
        ".coverage": true,
        "node_modules": true
    },
    "files.insertFinalNewline": true,
    "files.trimTrailingWhitespace": true,
    "html.format.indentInnerHtml": false,
    "sass.format.enabled": false,
    "terminal.integrated.shell.windows": "C:\\Program Files\\Git\\bin\\bash.exe",
    "workbench.colorCustomizations": {
        "activityBar.background": "#a35700",
        "activityBar.foreground": "#e7e7e7",
        "activityBar.inactiveForeground": "#e7e7e7",
        "titleBar.activeBackground": "#a35700",
        "titleBar.activeForeground": "#e7e7e7",
        "titleBar.inactiveBackground": "#a35700",
        "titleBar.inactiveForeground": "#e7e7e7"
    },
    "workbench.colorTheme": "Flatland Monokai",
    "workbench.iconTheme": "vscode-icons"
}
